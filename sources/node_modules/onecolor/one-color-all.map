{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/home/andreas/work/one-color/index.js",
    "/home/andreas/work/one-color/lib/CMYK.js",
    "/home/andreas/work/one-color/lib/HSL.js",
    "/home/andreas/work/one-color/lib/HSV.js",
    "/home/andreas/work/one-color/lib/LAB.js",
    "/home/andreas/work/one-color/lib/XYZ.js",
    "/home/andreas/work/one-color/lib/color.js",
    "/home/andreas/work/one-color/lib/plugins/clearer.js",
    "/home/andreas/work/one-color/lib/plugins/darken.js",
    "/home/andreas/work/one-color/lib/plugins/desaturate.js",
    "/home/andreas/work/one-color/lib/plugins/greyscale.js",
    "/home/andreas/work/one-color/lib/plugins/lighten.js",
    "/home/andreas/work/one-color/lib/plugins/mix.js",
    "/home/andreas/work/one-color/lib/plugins/namedColors.js",
    "/home/andreas/work/one-color/lib/plugins/negate.js",
    "/home/andreas/work/one-color/lib/plugins/opaquer.js",
    "/home/andreas/work/one-color/lib/plugins/rotate.js",
    "/home/andreas/work/one-color/lib/plugins/saturate.js",
    "/home/andreas/work/one-color/lib/plugins/toAlpha.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "module.exports = require('./lib/color')\n    .use(require('./lib/XYZ'))\n    .use(require('./lib/LAB'))\n    .use(require('./lib/HSV'))\n    .use(require('./lib/HSL'))\n    .use(require('./lib/CMYK'))\n\n    // Convenience functions\n    .use(require('./lib/plugins/namedColors'))\n    .use(require('./lib/plugins/clearer.js'))\n    .use(require('./lib/plugins/darken.js'))\n    .use(require('./lib/plugins/desaturate.js'))\n    .use(require('./lib/plugins/greyscale.js'))\n    .use(require('./lib/plugins/lighten.js'))\n    .use(require('./lib/plugins/mix.js'))\n    .use(require('./lib/plugins/negate.js'))\n    .use(require('./lib/plugins/opaquer.js'))\n    .use(require('./lib/plugins/rotate.js'))\n    .use(require('./lib/plugins/saturate.js'))\n    .use(require('./lib/plugins/toAlpha.js'));\n",
    "module.exports = function CMYK(color) {\n    color.installColorSpace('CMYK', ['cyan', 'magenta', 'yellow', 'black', 'alpha'], {\n        rgb: function () {\n            return new color.RGB((1 - this._cyan * (1 - this._black) - this._black),\n                                     (1 - this._magenta * (1 - this._black) - this._black),\n                                     (1 - this._yellow * (1 - this._black) - this._black),\n                                     this._alpha);\n        },\n\n        fromRgb: function () { // Becomes one.color.RGB.prototype.cmyk\n            // Adapted from http://www.javascripter.net/faq/rgb2cmyk.htm\n            var red = this._red,\n                green = this._green,\n                blue = this._blue,\n                cyan = 1 - red,\n                magenta = 1 - green,\n                yellow = 1 - blue,\n                black = 1;\n            if (red || green || blue) {\n                black = Math.min(cyan, Math.min(magenta, yellow));\n                cyan = (cyan - black) / (1 - black);\n                magenta = (magenta - black) / (1 - black);\n                yellow = (yellow - black) / (1 - black);\n            } else {\n                black = 1;\n            }\n            return new color.CMYK(cyan, magenta, yellow, black, this._alpha);\n        }\n    });\n};\n",
    "module.exports = function HSL(color) {\n    color.use(require('./HSV'));\n\n    color.installColorSpace('HSL', ['hue', 'saturation', 'lightness', 'alpha'], {\n        hsv: function () {\n            // Algorithm adapted from http://wiki.secondlife.com/wiki/Color_conversion_scripts\n            var l = this._lightness * 2,\n                s = this._saturation * ((l <= 1) ? l : 2 - l),\n                saturation;\n\n            // Avoid division by zero when l + s is very small (approaching black):\n            if (l + s < 1e-9) {\n                saturation = 0;\n            } else {\n                saturation = (2 * s) / (l + s);\n            }\n\n            return new color.HSV(this._hue, saturation, (l + s) / 2, this._alpha);\n        },\n\n        rgb: function () {\n            return this.hsv().rgb();\n        },\n\n        fromRgb: function () { // Becomes one.color.RGB.prototype.hsv\n            return this.hsv().hsl();\n        }\n    });\n};\n",
    "module.exports = function HSV(color) {\n    color.installColorSpace('HSV', ['hue', 'saturation', 'value', 'alpha'], {\n        rgb: function () {\n            var hue = this._hue,\n                saturation = this._saturation,\n                value = this._value,\n                i = Math.min(5, Math.floor(hue * 6)),\n                f = hue * 6 - i,\n                p = value * (1 - saturation),\n                q = value * (1 - f * saturation),\n                t = value * (1 - (1 - f) * saturation),\n                red,\n                green,\n                blue;\n            switch (i) {\n            case 0:\n                red = value;\n                green = t;\n                blue = p;\n                break;\n            case 1:\n                red = q;\n                green = value;\n                blue = p;\n                break;\n            case 2:\n                red = p;\n                green = value;\n                blue = t;\n                break;\n            case 3:\n                red = p;\n                green = q;\n                blue = value;\n                break;\n            case 4:\n                red = t;\n                green = p;\n                blue = value;\n                break;\n            case 5:\n                red = value;\n                green = p;\n                blue = q;\n                break;\n            }\n            return new color.RGB(red, green, blue, this._alpha);\n        },\n\n        hsl: function () {\n            var l = (2 - this._saturation) * this._value,\n                sv = this._saturation * this._value,\n                svDivisor = l <= 1 ? l : (2 - l),\n                saturation;\n\n            // Avoid division by zero when lightness approaches zero:\n            if (svDivisor < 1e-9) {\n                saturation = 0;\n            } else {\n                saturation = sv / svDivisor;\n            }\n            return new color.HSL(this._hue, saturation, l / 2, this._alpha);\n        },\n\n        fromRgb: function () { // Becomes one.color.RGB.prototype.hsv\n            var red = this._red,\n                green = this._green,\n                blue = this._blue,\n                max = Math.max(red, green, blue),\n                min = Math.min(red, green, blue),\n                delta = max - min,\n                hue,\n                saturation = (max === 0) ? 0 : (delta / max),\n                value = max;\n            if (delta === 0) {\n                hue = 0;\n            } else {\n                switch (max) {\n                case red:\n                    hue = (green - blue) / delta / 6 + (green < blue ? 1 : 0);\n                    break;\n                case green:\n                    hue = (blue - red) / delta / 6 + 1 / 3;\n                    break;\n                case blue:\n                    hue = (red - green) / delta / 6 + 2 / 3;\n                    break;\n                }\n            }\n            return new color.HSV(hue, saturation, value, this._alpha);\n        }\n    });\n};\n",
    "module.exports = function LAB(color) {\n    color.use(require('./XYZ.js'));\n\n    color.installColorSpace('LAB', ['l', 'a', 'b', 'alpha'], {\n        fromRgb: function () {\n            return this.xyz().lab();\n        },\n\n        rgb: function () {\n            return this.xyz().rgb();\n        },\n\n        xyz: function () {\n            // http://www.easyrgb.com/index.php?X=MATH&H=08#text8\n            var convert = function (channel) {\n                    var pow = Math.pow(channel, 3);\n                    return pow > 0.008856 ?\n                        pow :\n                        (channel - 16 / 116) / 7.87;\n                },\n                y = (this._l + 16) / 116,\n                x = this._a / 500 + y,\n                z = y - this._b / 200;\n\n            return new color.XYZ(\n                convert(x) *  95.047,\n                convert(y) * 100.000,\n                convert(z) * 108.883,\n                this._alpha\n            );\n        }\n    });\n};\n",
    "module.exports = function XYZ(color) {\n    color.installColorSpace('XYZ', ['x', 'y', 'z', 'alpha'], {\n        fromRgb: function () {\n            // http://www.easyrgb.com/index.php?X=MATH&H=02#text2\n            var convert = function (channel) {\n                    return channel > 0.04045 ?\n                        Math.pow((channel + 0.055) / 1.055, 2.4) :\n                        channel / 12.92;\n                },\n                r = convert(this._red),\n                g = convert(this._green),\n                b = convert(this._blue);\n\n            // Reference white point sRGB D65:\n            // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n            return new color.XYZ(\n                r * 0.4124564 + g * 0.3575761 + b * 0.1804375,\n                r * 0.2126729 + g * 0.7151522 + b * 0.0721750,\n                r * 0.0193339 + g * 0.1191920 + b * 0.9503041,\n                this._alpha\n            );\n        },\n\n        rgb: function () {\n            // http://www.easyrgb.com/index.php?X=MATH&H=01#text1\n            var x = this._x,\n                y = this._y,\n                z = this._z,\n                convert = function (channel) {\n                    return channel > 0.0031308 ?\n                        1.055 * Math.pow(channel, 1 / 2.4) - 0.055 :\n                        12.92 * channel;\n                };\n\n            // Reference white point sRGB D65:\n            // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n            return new colorRGB(\n                convert(x *  3.2404542 + y * -1.5371385 + z * -0.4985314),\n                convert(x * -0.9692660 + y *  1.8760108 + z *  0.0415560),\n                convert(x *  0.0556434 + y * -0.2040259 + z *  1.0572252),\n                this._alpha\n            );\n        },\n\n        lab: function () {\n            // http://www.easyrgb.com/index.php?X=MATH&H=07#text7\n            var convert = function (channel) {\n                    return channel > 0.008856 ?\n                        Math.pow(channel, 1 / 3) :\n                        7.787037 * channel + 4 / 29;\n                },\n                x = convert(this._x /  95.047),\n                y = convert(this._y / 100.000),\n                z = convert(this._z / 108.883);\n\n            return new color.LAB(\n                (116 * y) - 16,\n                500 * (x - y),\n                200 * (y - z),\n                this._alpha\n            );\n        }\n    });\n};\n",
    "/*jshint onevar:false*/\n/*global define*/\nvar installedColorSpaces = [],\n    undef = function (obj) {\n        return typeof obj === 'undefined';\n    },\n    channelRegExp = /\\s*(\\.\\d+|\\d+(?:\\.\\d+)?)(%)?\\s*/,\n    percentageChannelRegExp = /\\s*(\\.\\d+|100|\\d?\\d(?:\\.\\d+)?)%\\s*/,\n    alphaChannelRegExp = /\\s*(\\.\\d+|\\d+(?:\\.\\d+)?)\\s*/,\n    cssColorRegExp = new RegExp(\n                         \"^(rgb|hsl|hsv)a?\" +\n                         \"\\\\(\" +\n                             channelRegExp.source + \",\" +\n                             channelRegExp.source + \",\" +\n                             channelRegExp.source +\n                             \"(?:,\" + alphaChannelRegExp.source + \")?\" +\n                         \"\\\\)$\", \"i\");\n\nfunction color(obj) {\n    if (Array.isArray(obj)) {\n        if (typeof obj[0] === 'string' && typeof color[obj[0]] === 'function') {\n            // Assumed array from .toJSON()\n            return new color[obj[0]](obj.slice(1, obj.length));\n        } else if (obj.length === 4) {\n            // Assumed 4 element int RGB array from canvas with all channels [0;255]\n            return new color.RGB(obj[0] / 255, obj[1] / 255, obj[2] / 255, obj[3] / 255);\n        }\n    } else if (typeof obj === 'string') {\n        var lowerCased = obj.toLowerCase();\n        if (color.namedColors[lowerCased]) {\n            obj = '#' + color.namedColors[lowerCased];\n        }\n        if (lowerCased === 'transparent') {\n            obj = 'rgba(0,0,0,0)';\n        }\n        // Test for CSS rgb(....) string\n        var matchCssSyntax = obj.match(cssColorRegExp);\n        if (matchCssSyntax) {\n            var colorSpaceName = matchCssSyntax[1].toUpperCase(),\n                alpha = undef(matchCssSyntax[8]) ? matchCssSyntax[8] : parseFloat(matchCssSyntax[8]),\n                hasHue = colorSpaceName[0] === 'H',\n                firstChannelDivisor = matchCssSyntax[3] ? 100 : (hasHue ? 360 : 255),\n                secondChannelDivisor = (matchCssSyntax[5] || hasHue) ? 100 : 255,\n                thirdChannelDivisor = (matchCssSyntax[7] || hasHue) ? 100 : 255;\n            if (undef(color[colorSpaceName])) {\n                throw new Error('color.' + colorSpaceName + ' is not installed.');\n            }\n            return new color[colorSpaceName](\n                parseFloat(matchCssSyntax[2]) / firstChannelDivisor,\n                parseFloat(matchCssSyntax[4]) / secondChannelDivisor,\n                parseFloat(matchCssSyntax[6]) / thirdChannelDivisor,\n                alpha\n            );\n        }\n        // Assume hex syntax\n        if (obj.length < 6) {\n            // Allow CSS shorthand\n            obj = obj.replace(/^#?([0-9a-f])([0-9a-f])([0-9a-f])$/i, '$1$1$2$2$3$3');\n        }\n        // Split obj into red, green, and blue components\n        var hexMatch = obj.match(/^#?([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])$/i);\n        if (hexMatch) {\n            return new color.RGB(\n                parseInt(hexMatch[1], 16) / 255,\n                parseInt(hexMatch[2], 16) / 255,\n                parseInt(hexMatch[3], 16) / 255\n            );\n        }\n\n        // No match so far. Lets try the less likely ones\n        if (color.CMYK) {\n            var cmykMatch = obj.match(new RegExp(\n                             \"^cmyk\" +\n                             \"\\\\(\" +\n                                 percentageChannelRegExp.source + \",\" +\n                                 percentageChannelRegExp.source + \",\" +\n                                 percentageChannelRegExp.source + \",\" +\n                                 percentageChannelRegExp.source +\n                             \"\\\\)$\", \"i\"));\n            if (cmykMatch) {\n                return new color.CMYK(\n                    parseFloat(cmykMatch[1]) / 100,\n                    parseFloat(cmykMatch[2]) / 100,\n                    parseFloat(cmykMatch[3]) / 100,\n                    parseFloat(cmykMatch[4]) / 100\n                );\n            }\n        }\n    } else if (typeof obj === 'object' && obj.isColor) {\n        return obj;\n    }\n    return false;\n}\n\ncolor.namedColors = {};\n\ncolor.installColorSpace = function (colorSpaceName, propertyNames, config) {\n    color[colorSpaceName] = function (a1) { // ...\n        var args = Array.isArray(a1) ? a1 : arguments;\n        propertyNames.forEach(function (propertyName, i) {\n            var propertyValue = args[i];\n            if (propertyName === 'alpha') {\n                this._alpha = (isNaN(propertyValue) || propertyValue > 1) ? 1 : (propertyValue < 0 ? 0 : propertyValue);\n            } else {\n                if (isNaN(propertyValue)) {\n                    throw new Error('[' + colorSpaceName + ']: Invalid color: (' + propertyNames.join(',') + ')');\n                }\n                if (propertyName === 'hue') {\n                    this._hue = propertyValue < 0 ? propertyValue - Math.floor(propertyValue) : propertyValue % 1;\n                } else {\n                    this['_' + propertyName] = propertyValue < 0 ? 0 : (propertyValue > 1 ? 1 : propertyValue);\n                }\n            }\n        }, this);\n    };\n    color[colorSpaceName].propertyNames = propertyNames;\n\n    var prototype = color[colorSpaceName].prototype;\n\n    ['valueOf', 'hex', 'hexa', 'css', 'cssa'].forEach(function (methodName) {\n        prototype[methodName] = prototype[methodName] || (colorSpaceName === 'RGB' ? prototype.hex : function () {\n            return this.rgb()[methodName]();\n        });\n    });\n\n    prototype.isColor = true;\n\n    prototype.equals = function (otherColor, epsilon) {\n        if (undef(epsilon)) {\n            epsilon = 1e-10;\n        }\n\n        otherColor = otherColor[colorSpaceName.toLowerCase()]();\n\n        for (var i = 0; i < propertyNames.length; i = i + 1) {\n            if (Math.abs(this['_' + propertyNames[i]] - otherColor['_' + propertyNames[i]]) > epsilon) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    prototype.toJSON = function () {\n        return [colorSpaceName].concat(propertyNames.map(function (propertyName) {\n            return this['_' + propertyName];\n        }, this));\n    };\n\n    for (var propertyName in config) {\n        if (config.hasOwnProperty(propertyName)) {\n            var matchFromColorSpace = propertyName.match(/^from(.*)$/);\n            if (matchFromColorSpace) {\n                color[matchFromColorSpace[1].toUpperCase()].prototype[colorSpaceName.toLowerCase()] = config[propertyName];\n            } else {\n                prototype[propertyName] = config[propertyName];\n            }\n        }\n    }\n\n    // It is pretty easy to implement the conversion to the same color space:\n    prototype[colorSpaceName.toLowerCase()] = function () {\n        return this;\n    };\n    prototype.toString = function () {\n        return '[' + colorSpaceName + ' ' + propertyNames.map(function (propertyName) {\n            return this['_' + propertyName];\n        }).join(', ') + ']';\n    };\n\n    // Generate getters and setters\n    propertyNames.forEach(function (propertyName, i) {\n        var shortName = propertyName === 'black' ? 'k' : propertyName.charAt(0);\n        prototype[propertyName] = prototype[shortName] = function (value, isDelta) {\n            // Simple getter mode: color.red()\n            if (typeof value === 'undefined') {\n                return this['_' + propertyName];\n            } else if (isDelta) {\n                // Adjuster: color.red(+.2, true)\n                return new this.constructor(propertyNames.map(function (otherPropertyName, i) {\n                    return this['_' + otherPropertyName] + (propertyName === otherPropertyName ? value : 0);\n                }, this));\n            } else {\n                // Setter: color.red(.2);\n                return new this.constructor(propertyNames.map(function (otherPropertyName, i) {\n                    return (propertyName === otherPropertyName) ? value : this['_' + otherPropertyName];\n                }, this));\n            }\n        };\n    });\n\n    function installForeignMethods(targetColorSpaceName, sourceColorSpaceName) {\n        var obj = {};\n        obj[sourceColorSpaceName.toLowerCase()] = function () {\n            return this.rgb()[sourceColorSpaceName.toLowerCase()]();\n        };\n        color[sourceColorSpaceName].propertyNames.forEach(function (propertyName, i) {\n            var shortName = propertyName === 'black' ? 'k' : propertyName.charAt(0);\n            obj[propertyName] = obj[shortName] = function (value, isDelta) {\n                return this[sourceColorSpaceName.toLowerCase()]()[propertyName](value, isDelta);\n            };\n        });\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop) && color[targetColorSpaceName].prototype[prop] === undefined) {\n                color[targetColorSpaceName].prototype[prop] = obj[prop];\n            }\n        }\n    }\n\n    installedColorSpaces.forEach(function (otherColorSpaceName) {\n        installForeignMethods(colorSpaceName, otherColorSpaceName);\n        installForeignMethods(otherColorSpaceName, colorSpaceName);\n    });\n\n    installedColorSpaces.push(colorSpaceName);\n    return color;\n};\n\ncolor.pluginByName = {};\n\ncolor.use = function (plugin) {\n    var pluginName = plugin.name;\n    if (typeof pluginName !== 'string' || !this.pluginByName[pluginName]) {\n        this.pluginByName[pluginName] = plugin;\n        plugin(color);\n    }\n    return color;\n};\n\ncolor.installMethod = function (name, fn) {\n    installedColorSpaces.forEach(function (colorSpace) {\n        color[colorSpace].prototype[name] = fn;\n    });\n};\n\ncolor.installColorSpace('RGB', ['red', 'green', 'blue', 'alpha'], {\n    hex: function () {\n        var hexString = (Math.round(255 * this._red) * 0x10000 + Math.round(255 * this._green) * 0x100 + Math.round(255 * this._blue)).toString(16);\n        return '#' + ('00000'.substr(0, 6 - hexString.length)) + hexString;\n    },\n\n    hexa: function () {\n        var alphaString = Math.round(this._alpha * 255).toString(16);\n        return '#' + '00'.substr(0, 2 - alphaString.length) + alphaString + this.hex().substr(1, 6);\n    },\n\n    css: function () {\n        return \"rgb(\" + Math.round(255 * this._red) + \",\" + Math.round(255 * this._green) + \",\" + Math.round(255 * this._blue) + \")\";\n    },\n\n    cssa: function () {\n        return \"rgba(\" + Math.round(255 * this._red) + \",\" + Math.round(255 * this._green) + \",\" + Math.round(255 * this._blue) + \",\" + this._alpha + \")\";\n    }\n});\n\nmodule.exports = color;\n",
    "module.exports = function clearer(color) {\n    color.installMethod('clearer', function (amount) {\n        return this.alpha(isNaN(amount) ? -0.1 : -amount, true);\n    });\n};\n",
    "module.exports = function darken(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('darken', function (amount) {\n        return this.lightness(isNaN(amount) ? -0.1 : -amount, true);\n    });\n};\n",
    "module.exports = function desaturate(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('desaturate', function (amount) {\n        return this.saturation(isNaN(amount) ? -0.1 : -amount, true);\n    });\n};\n",
    "module.exports = function grayscale(color) {\n    function gs () {\n        var rgb = this.rgb(),\n            val = rgb._red * 0.3 + rgb._green * 0.59 + rgb._blue * 0.11;\n\n        return new color.RGB(val, val, val, this._alpha);\n    }\n\n    color.installMethod('greyscale', gs);\n    color.installMethod('grayscale', gs);\n};\n",
    "module.exports = function lighten(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('lighten', function (amount) {\n        return this.lightness(isNaN(amount) ? 0.1 : amount, true);\n    });\n};\n",
    "module.exports = function mix(color) {\n    color.installMethod('mix', function (otherColor, weight) {\n        otherColor = color(otherColor).rgb();\n        weight = 1 - (isNaN(weight) ? 0.5 : weight);\n\n        var w = weight * 2 - 1,\n            a = this._alpha - othercolor._alpha,\n            weight1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2,\n            weight2 = 1 - weight1,\n            rgb = this.rgb();\n\n        return new color.RGB(\n            rgb._red * weight1 + othercolor._red * weight2,\n            rgb._green * weight1 + othercolor._green * weight2,\n            rgb._blue * weight1 + othercolor._blue * weight2,\n            rgb._alpha * weight + othercolor._alpha * (1 - weight)\n        );\n    });\n};\n",
    "module.exports = function namedColors(color) {\n    color.namedColors = {\n        aliceblue: 'f0f8ff',\n        antiquewhite: 'faebd7',\n        aqua: '0ff',\n        aquamarine: '7fffd4',\n        azure: 'f0ffff',\n        beige: 'f5f5dc',\n        bisque: 'ffe4c4',\n        black: '000',\n        blanchedalmond: 'ffebcd',\n        blue: '00f',\n        blueviolet: '8a2be2',\n        brown: 'a52a2a',\n        burlywood: 'deb887',\n        cadetblue: '5f9ea0',\n        chartreuse: '7fff00',\n        chocolate: 'd2691e',\n        coral: 'ff7f50',\n        cornflowerblue: '6495ed',\n        cornsilk: 'fff8dc',\n        crimson: 'dc143c',\n        cyan: '0ff',\n        darkblue: '00008b',\n        darkcyan: '008b8b',\n        darkgoldenrod: 'b8860b',\n        darkgray: 'a9a9a9',\n        darkgrey: 'a9a9a9',\n        darkgreen: '006400',\n        darkkhaki: 'bdb76b',\n        darkmagenta: '8b008b',\n        darkolivegreen: '556b2f',\n        darkorange: 'ff8c00',\n        darkorchid: '9932cc',\n        darkred: '8b0000',\n        darksalmon: 'e9967a',\n        darkseagreen: '8fbc8f',\n        darkslateblue: '483d8b',\n        darkslategray: '2f4f4f',\n        darkslategrey: '2f4f4f',\n        darkturquoise: '00ced1',\n        darkviolet: '9400d3',\n        deeppink: 'ff1493',\n        deepskyblue: '00bfff',\n        dimgray: '696969',\n        dimgrey: '696969',\n        dodgerblue: '1e90ff',\n        firebrick: 'b22222',\n        floralwhite: 'fffaf0',\n        forestgreen: '228b22',\n        fuchsia: 'f0f',\n        gainsboro: 'dcdcdc',\n        ghostwhite: 'f8f8ff',\n        gold: 'ffd700',\n        goldenrod: 'daa520',\n        gray: '808080',\n        grey: '808080',\n        green: '008000',\n        greenyellow: 'adff2f',\n        honeydew: 'f0fff0',\n        hotpink: 'ff69b4',\n        indianred: 'cd5c5c',\n        indigo: '4b0082',\n        ivory: 'fffff0',\n        khaki: 'f0e68c',\n        lavender: 'e6e6fa',\n        lavenderblush: 'fff0f5',\n        lawngreen: '7cfc00',\n        lemonchiffon: 'fffacd',\n        lightblue: 'add8e6',\n        lightcoral: 'f08080',\n        lightcyan: 'e0ffff',\n        lightgoldenrodyellow: 'fafad2',\n        lightgray: 'd3d3d3',\n        lightgrey: 'd3d3d3',\n        lightgreen: '90ee90',\n        lightpink: 'ffb6c1',\n        lightsalmon: 'ffa07a',\n        lightseagreen: '20b2aa',\n        lightskyblue: '87cefa',\n        lightslategray: '789',\n        lightslategrey: '789',\n        lightsteelblue: 'b0c4de',\n        lightyellow: 'ffffe0',\n        lime: '0f0',\n        limegreen: '32cd32',\n        linen: 'faf0e6',\n        magenta: 'f0f',\n        maroon: '800000',\n        mediumaquamarine: '66cdaa',\n        mediumblue: '0000cd',\n        mediumorchid: 'ba55d3',\n        mediumpurple: '9370d8',\n        mediumseagreen: '3cb371',\n        mediumslateblue: '7b68ee',\n        mediumspringgreen: '00fa9a',\n        mediumturquoise: '48d1cc',\n        mediumvioletred: 'c71585',\n        midnightblue: '191970',\n        mintcream: 'f5fffa',\n        mistyrose: 'ffe4e1',\n        moccasin: 'ffe4b5',\n        navajowhite: 'ffdead',\n        navy: '000080',\n        oldlace: 'fdf5e6',\n        olive: '808000',\n        olivedrab: '6b8e23',\n        orange: 'ffa500',\n        orangered: 'ff4500',\n        orchid: 'da70d6',\n        palegoldenrod: 'eee8aa',\n        palegreen: '98fb98',\n        paleturquoise: 'afeeee',\n        palevioletred: 'd87093',\n        papayawhip: 'ffefd5',\n        peachpuff: 'ffdab9',\n        peru: 'cd853f',\n        pink: 'ffc0cb',\n        plum: 'dda0dd',\n        powderblue: 'b0e0e6',\n        purple: '800080',\n        rebeccapurple: '639',\n        red: 'f00',\n        rosybrown: 'bc8f8f',\n        royalblue: '4169e1',\n        saddlebrown: '8b4513',\n        salmon: 'fa8072',\n        sandybrown: 'f4a460',\n        seagreen: '2e8b57',\n        seashell: 'fff5ee',\n        sienna: 'a0522d',\n        silver: 'c0c0c0',\n        skyblue: '87ceeb',\n        slateblue: '6a5acd',\n        slategray: '708090',\n        slategrey: '708090',\n        snow: 'fffafa',\n        springgreen: '00ff7f',\n        steelblue: '4682b4',\n        tan: 'd2b48c',\n        teal: '008080',\n        thistle: 'd8bfd8',\n        tomato: 'ff6347',\n        turquoise: '40e0d0',\n        violet: 'ee82ee',\n        wheat: 'f5deb3',\n        white: 'fff',\n        whitesmoke: 'f5f5f5',\n        yellow: 'ff0',\n        yellowgreen: '9acd32'\n    };\n};\n",
    "module.exports = function negate(color) {\n    color.installMethod('negate', function () {\n        var rgb = this.rgb();\n        return new color.RGB(1 - rgb._red, 1 - rgb._green, 1 - rgb._blue, this._alpha);\n    });\n};\n",
    "module.exports = function opaquer(color) {\n    color.installMethod('opaquer', function (amount) {\n        return this.alpha(isNaN(amount) ? 0.1 : amount, true);\n    });\n};\n",
    "module.exports = function rotate(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('rotate', function (degrees) {\n        return this.hue((degrees || 0) / 360, true);\n    });\n};\n",
    "module.exports = function saturate(color) {\n    color.use(require('../HSL'));\n\n    color.installMethod('saturate', function (amount) {\n        return this.saturation(isNaN(amount) ? 0.1 : amount, true);\n    });\n};\n",
    "// Adapted from http://gimp.sourcearchive.com/documentation/2.6.6-1ubuntu1/color-to-alpha_8c-source.html\n// toAlpha returns a color where the values of the argument have been converted to alpha\nmodule.exports = function toAlpha(color) {\n    color.installMethod('toAlpha', function (color) {\n        var me = this.rgb(),\n            other = color(color).rgb(),\n            epsilon = 1e-10,\n            a = new color.RGB(0, 0, 0, me._alpha),\n            channels = ['_red', '_green', '_blue'];\n\n        channels.forEach(function (channel) {\n            if (me[channel] < epsilon) {\n                a[channel] = me[channel];\n            } else if (me[channel] > other[channel]) {\n                a[channel] = (me[channel] - other[channel]) / (1 - other[channel]);\n            } else if (me[channel] > other[channel]) {\n                a[channel] = (other[channel] - me[channel]) / other[channel];\n            } else {\n                a[channel] = 0;\n            }\n        });\n\n        if (a._red > a._green) {\n            if (a._red > a._blue) {\n                me._alpha = a._red;\n            } else {\n                me._alpha = a._blue;\n            }\n        } else if (a._green > a._blue) {\n            me._alpha = a._green;\n        } else {\n            me._alpha = a._blue;\n        }\n\n        if (me._alpha < epsilon) {\n            return me;\n        }\n\n        channels.forEach(function (channel) {\n            me[channel] = (me[channel] - other[channel]) / me._alpha + other[channel];\n        });\n        me._alpha *= a._alpha;\n\n        return me;\n    });\n};\n"
  ]
}